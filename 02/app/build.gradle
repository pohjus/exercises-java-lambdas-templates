/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

checkstyle {
    configFile = rootProject.file('./config/checkstyle.xml')
    ignoreFailures = false
    sourceSets = [project.sourceSets.main] // this line ensures that only the main source set is checked, excluding tests
}

test {
    // your test configuration
    dependsOn checkstyleMain
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'
    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'exercise.App'
}

tasks.withType(Checkstyle) {
    doLast {
        if (project.hasProperty('checkstyleReportFile')) {
            // Print the Checkstyle violations to the console
            def reportFile = file(checkstyleReportFile)
            if (reportFile.exists()) {
                println "Checkstyle violations report:"
                println reportFile.text
            }
        }
    }
}